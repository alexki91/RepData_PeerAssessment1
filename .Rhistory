print hello
pollutantmean <- function(directory, pollutant, id =1:332, removeNA = TRUE){
pollutantmean <- function(directory, pollutant, id =1:332, removeNA = TRUE){
dir <- directory
data_dir <- paste(getwd(),dir,sep = '/')
files <- list.files(data_dir, pattern = '\\.csv')
tables <- lapply(paste(data_dir,files,sep ='/', read.csv, header = TRUE))
assign('pollutantmean',do.call(rbind, tables))
nc <- ncol(pollutant)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(pollutant[, i], na.rm = removeNA)
}
<
pollutantmean <- function(directory, pollutant, id =1:332, removeNA = TRUE){
dir <- directory
data_dir <- paste(getwd(),dir,sep = '/')
files <- list.files(data_dir, pattern = '\\.csv')
tables <- lapply(paste(data_dir,files,sep ='/', read.csv, header = TRUE))
assign('pollutantmean',do.call(rbind, tables))
nc <- ncol(pollutant)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(pollutant[, i], na.rm = removeNA)
}
setwd("G:/Data/specdata")
files <- list.files(pattern = ".csv")
directory <- lappy(files, read.csv)
pollutantmean <- function(directory, pollutant, id =1:332, removeNA = TRUE){
nc <- ncol(pollutant)
means <- numeric(nc, na.rm=TRUE)
for(i in 1:nc){
means[i] <- mean(pollutant[, i], na.rm = removeNA)
}
means
}
data(iris)
library(datasets)
data(iris)
?iris
data("iris")
apply(iris[, 1:4], 1, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars, mtcars$cyl)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
apply(mtcars, 2, mean)
lapply(mtcars, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
apply(iris[, 1:4], 2, mean)
colMeans(iris)
View(iris)
apply(iris["virginica", 1:4], 2, mean)
View(mtcars)
View(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
apply(iris[, 1:4], 1, mean)
apply(iris, 1, mean)
colMeans(iris)
apply(iris, 2, mean)
rowMeans(iris[, 1:4])
apply(iris[101:150, 1:4], 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, average)
tapply(mtcars$mpg, mtcars$cyl, avg())
tapply(mtcars$mpg, mtcars$cyl, avg())
lapply(mtcars$hp,(mtcars$hp,mean))
lapply(mtcars$hp,mtcars$hp,mean)
tapply(mtcars$cyl, mtcars$hp, mean)
tapply(mtcars$cyl = 4, mtcars$hp, mean)
tapply(mtcars$cyl <- 4, mtcars$hp, mean)
new <- subset(mtcars, cyl == 4)
tapply(new, mtcars$hp, mean)
lapply(mtcars$cyl <- "4",mtcars$hp,mean)
new1 <- mtcars[which(mtcars$cyl=="4"),]
tapply(new, mtcars$hp, mean)
tapply(new(mtcars$hp, mean)
tapply(new1(mtcars$hp, mean)
lapply(new1, mean)
new2 <- mtcars[which(mtcars$cyl=="8"),]
lapply(new2, mean)
View(new2)
View(new1)
library(datasets)
data(mtcars)
new2 <- mtcars[which(mtcars$cyl=="8"),]
lapply(new2, mean)
new3 <- iris[which(iris$Species=="virginica"),]
lapply(new3, mean)
new3 <- iris[which(iris$Species=="virginica"),]
lapply(new3, mean)
lapply(new2, mean)
apply(iris[101:150, 1:4], 2, mean)
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setInverse <- function() inv <<- solve(x) #calculate the inverse
getInverse <- function() inv
list(set = set,
get = get,
setInverse = setInverse,
getInverse = getInverse)
}
funs <- makeCacheMatrix()
funs$set(matrix(1:4, 2))
funs$get()
cacheSolve <- function(x=matrix(), ...) {
inverse<-x$getmatrix()
if(!is.null(inverse)){
message("getting cached data")
return(inverse)
}
matrix<-x$get()
m<-solve(matrix, ...)
x$setmatrix(inverse)
inverse
}
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
e
system.time()
data(mtcars)
mtcars
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg")]
narrow
View(narrow)
View(narrow)
library(reshape2)
wide1 <- tidied <- dcast(narrow, cyl + gear ~ vs, max)
wide1
wide2 <- tidied <- dcast(narrow, cyl + vs ~ gear, max)
wide2
notverywide <- aggregate(mpg ~ gear + vs + cyl, data = narrow, max)
View(notverywide)
View(notverywide)
library(knitr)
install.packages("rmarkdown")
'''
setwd("G:/Data/Repro")
ass <- read.csv("./activity.csv",sep = ";" ,header = TRUE)
clear
ass <- read.csv("./activity.csv",sep = ";" ,he
setwd("G:/Data/Repro")
setwd("G:/Data/Repro")
ass <- read.csv("./activity.csv",sep = ";" ,header = TRUE)
ass <- read.csv("./activity.csv",sep = ";" ,header = TRUE)
setwd("G:/Data/Repro")
